# chezmoi:template:left-delimiter="# [[" right-delimiter="]] #"

# [[ if eq .chezmoi.os "darwin" -]] #
# Fish shell configuration for macOS development environment
# [[ else -]] #
# Fish shell configuration for Linux development environment
# [[ end -]] #

###########################################
# PATH CONFIGURATION - ORDER MATTERS
###########################################

# [[ if eq .chezmoi.os "darwin" -]] #
# Ensure Homebrew is in PATH before anything else
# Handle both Apple Silicon (/opt/homebrew) and Intel (/usr/local) Mac architectures
if test -d "/opt/homebrew/bin"
    fish_add_path --prepend "/opt/homebrew/bin"
    fish_add_path --prepend "/opt/homebrew/sbin"
else if test -d "/usr/local/bin"
    fish_add_path --prepend "/usr/local/bin"
    fish_add_path --prepend "/usr/local/sbin"
end

# Set all Homebrew environment variables (PATH, MANPATH, INFOPATH)
if type -q brew
    eval "$(brew shellenv)"
end
# [[ end ]] #

# User-specific executables
if test -d $HOME/.local/bin
    fish_add_path $HOME/.local/bin
end

# Add language-specific and tool paths
if test -d $HOME/.fzf/bin
    fish_add_path $HOME/.fzf/bin
end

if test -d $HOME/.cargo/bin
    fish_add_path $HOME/.cargo/bin
end

# Google Cloud SDK configuration
# [[ if eq .chezmoi.os "darwin" -]] #
set -l brew_prefix (brew --prefix)
if test -d "$brew_prefix/Caskroom/google-cloud-sdk"
    fish_add_path "$brew_prefix/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin"

    if test -f "$brew_prefix/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.fish.inc"
        source "$brew_prefix/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.fish.inc"
    end
end
# [[ else -]] #
# Linux-specific Google Cloud SDK path
if test -d $HOME/.local/google-cloud-sdk
    fish_add_path $HOME/.local/google-cloud-sdk/bin
    set -gx CLOUDSDK_PYTHON /usr/bin/python3

    if test -f $HOME/.local/google-cloud-sdk/path.fish.inc
        source $HOME/.local/google-cloud-sdk/path.fish.inc
    end
end
# [[ end -]] #

# Atuin shell history tool
if test -d $HOME/.atuin/bin
    fish_add_path $HOME/.atuin/bin
end

###########################################
# ENVIRONMENT VARIABLES
###########################################

# Text editors
set -gx EDITOR nvim
set -gx VISUAL nvim

# Terminal capabilities
set -gx TERM xterm-256color

# WezTerm-specific settings for better color support
if test "$TERM_PROGRAM" = WezTerm
    set -gx COLORTERM truecolor
end

# Use difftastic for git diffs if available
if type -q difft
    set -gx GIT_EXTERNAL_DIFF difft
end

###########################################
# TOOL CONFIGURATION
###########################################

# FZF fuzzy finder
set -gx FZF_DEFAULT_OPTS "--layout=reverse --border"

# Starship prompt - https://starship.rs
if type -q starship
    starship init fish | source
end

# Zoxide smarter cd - https://github.com/ajeetdsouza/zoxide
if type -q zoxide
    zoxide init fish --cmd cd | source
end

# Direnv for directory-specific environments - https://direnv.net
if type -q direnv
    direnv hook fish | source
end

# Chezmoi dotfile manager - https://chezmoi.io
if type -q chezmoi
    chezmoi completion fish | source
end

# FZF configuration with custom key bindings
# Avoiding conflict with atuin on Ctrl+R
if type -q fzf
    set -x FZF_DISABLE_KEYBINDINGS 1
    fzf --fish | source

    # Custom key bindings for FZF
    bind \ct __fzf_search_current_dir      # Ctrl+T: search files
    bind \ec __fzf_search_history          # Alt+C: search history
    bind \eC '__fzf_cd --hidden'           # Alt+Shift+C: cd with hidden files
end

# Atuin shell history with search - https://atuin.sh
if type -q atuin
    # Enable shell completions
    atuin gen-completions --shell fish

    set -gx ATUIN_NOBIND true
    atuin init fish | source

    # Bind Ctrl+R to search shell history with atuin
    bind \cr _atuin_search
    bind -M insert \cr _atuin_search
end

# Docker - https://www.docker.com
if type -q docker
    docker completion fish | source
end

# 1Password CLI - https://developer.1password.com/docs/cli
if type -q op
    # Enable shell completions
    op completion fish | source

    # Service account creation example:
    # op service-account create "My Service Account" --can-create-vaults --expires-in 24h --vault Production:read_items,write_items
end

###########################################
# ALIASES AND USER PREFERENCES
###########################################

# Disable fish greeting message
set fish_greeting

# Load separate aliases file
if test -f $HOME/.config/fish/aliases.fish
    source $HOME/.config/fish/aliases.fish
end

# Load local machine-specific config (not managed by chezmoi)
if test -f $HOME/.config/fish/local.config.fish
    source $HOME/.config/fish/local.config.fish
end
