# [[ /* chezmoi:template:left-delimiter="# [[" right-delimiter="]] #" */ ]]
#!/bin/sh

# This script removes Anaconda/Miniconda installations and sets up blocking
# It works on both macOS and Linux
# [[ if ne .chezmoi.os "windows" ]] #

set -eu

echo "Checking for Anaconda/Miniconda installations..."

# Function to remove conda completely
remove_conda() {
  conda_path=$1
  conda_name=$2

  echo "Found $conda_name at $conda_path"
  echo "Removing $conda_name..."

  # Deactivate any conda environments first
  if [ -n "${CONDA_PREFIX:-}" ]; then
    echo "Deactivating conda environment..."
    unset CONDA_PREFIX
    unset CONDA_DEFAULT_ENV
    unset CONDA_PYTHON_EXE
  fi

  # Remove the entire directory
  echo "Removing $conda_path directory..."
  rm -rf "$conda_path"

  # Clean up .bashrc, .zshrc, and config.fish
  for rc_file in "$HOME/.bashrc" "$HOME/.bash_profile" "$HOME/.zshrc" "$HOME/.config/fish/config.fish"; do
    if [ -f "$rc_file" ]; then
      echo "Cleaning up $rc_file..."
      tmp_file=$(mktemp)
      grep -v "conda initialize\|conda.sh\|__conda\|Conda\|miniforge\|mambaforge\|anaconda\|miniconda" "$rc_file" > "$tmp_file" || true
      mv "$tmp_file" "$rc_file"
    fi
  done

  # Remove conda-specific dot files
  echo "Removing conda configuration files..."
  rm -rf "$HOME/.conda"
  rm -rf "$HOME/.condarc"
}

# Common conda installation locations - using POSIX-compatible approach
FOUND_CONDA=false

# Check for and remove each potential conda installation
for path in \
  "$HOME/anaconda3" \
  "$HOME/miniconda3" \
  "$HOME/anaconda" \
  "$HOME/miniconda" \
  "$HOME/.anaconda" \
  "$HOME/.miniconda" \
  "$HOME/opt/anaconda3" \
  "$HOME/opt/miniconda3" \
  "$HOME/opt/anaconda" \
  "$HOME/opt/miniconda" \
  "$HOME/.local/anaconda3" \
  "$HOME/.local/miniconda3" \
  "$HOME/.local/miniforge3" \
  "$HOME/.local/mambaforge" \
  "/opt/conda"; do
  if [ -d "$path" ]; then
    if [ -f "$path/bin/conda" ] || [ -f "$path/condabin/conda" ]; then
      FOUND_CONDA=true
      remove_conda "$path" "$(basename "$path")"
    fi
  fi
done

# Check for conda in PATH
if command -v conda > /dev/null 2>&1; then
  FOUND_CONDA=true
  CONDA_PATH=$(dirname "$(dirname "$(command -v conda)")")
  echo "Found conda in PATH at $CONDA_PATH"
  echo "Removing conda executable from PATH..."
  remove_conda "$CONDA_PATH" "conda"
fi

# Final message
if [ "$FOUND_CONDA" = true ]; then
  echo "Conda removal complete. Please restart your shell or terminal."
else
  echo "No Anaconda/Miniconda installations found."
fi

# Create a warning file to prevent future installations
mkdir -p "$HOME/.local/share"
cat > "$HOME/.local/share/conda_warning.txt" << EOF
This environment prohibits the use of Anaconda/Miniconda as part of the dotfiles policy.
Please use alternative Python environment management tools like:
- venv (built into Python)
- virtualenv
- pyenv
- uv (recommended)

For package management, consider:
- pip
- uv (recommended)

If you have questions, please consult your team's documentation.
EOF

echo "Created warning file at $HOME/.local/share/conda_warning.txt"

# Add aliases to bash and zsh to block conda commands
for shell_rc in "$HOME/.bashrc" "$HOME/.bash_profile" "$HOME/.zshrc"; do
  if [ -f "$shell_rc" ]; then
    echo "Adding conda blocking aliases to $shell_rc..."

    # Only add if not already present
    if ! grep -q "# Block conda/miniconda/anaconda" "$shell_rc"; then
      cat >> "$shell_rc" << 'EOF'

# Block conda/miniconda/anaconda installation attempts
alias conda="echo 'â›” Conda is not allowed in this environment.' && echo 'Please use alternative Python environment tools like venv, virtualenv, or uv.' && echo 'See \$HOME/.local/share/conda_warning.txt for more information.'"
alias miniconda="conda"
alias anaconda="conda"
alias mamba="conda"
EOF
    fi
  fi
done

# [[ end ]] #
